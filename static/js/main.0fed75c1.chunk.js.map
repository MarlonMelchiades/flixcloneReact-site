{"version":3,"sources":["components/Request/Tmdb.js","components/Header/index.js","components/FeaturedMovie/index.js","components/MovieRow/index.js","components/Footer/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","Header","black","className","href","src","alt","hred","FeaturedMovie","item","firstDate","Date","first_air_date","genres","i","push","name","descripition","overview","length","substring","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","id","join","MovieRow","useState","scrollX","setScrollX","onClick","xLeft","Math","round","window","innerWidth","fontSize","xRight","listW","results","marginLeft","width","map","key","poster_path","original_title","Footer","App","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","ramdomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fed75c1.chunk.js","sourcesContent":["const API_KEY = 'cb2ff0124d4d5024740d039a9414960c';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            // eslint-disable-next-line default-case\r\n            switch(type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n            }\r\n        } \r\n\r\n        return info;\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nfunction Header({black}) {\r\n  return (\r\n    <header className={black ? \"black\" : \"\"}>\r\n      <div className=\"header--logo\">\r\n        <a href=\"/\">\r\n          <img\r\n            src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\"\r\n            alt=\"Netflix\"\r\n          ></img>\r\n        </a>\r\n      </div>\r\n      <div className=\"header--user\">\r\n        <a hred=\"/\">\r\n          <img src=\"https://ih0.redbubble.net/image.618369215.1083/flat,1000x1000,075,f.u2.jpg\"></img>\r\n        </a>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./featuredMovie.css\";\r\n\r\nfunction FeaturedMovie({ item }) {\r\n  let firstDate = new Date(item.first_air_date);\r\n  let genres = [];\r\n  for(let i in item.genres) {\r\n    genres.push(item.genres[i].name);\r\n  }\r\n\r\n  let descripition = item.overview;\r\n  if (descripition.length > 300) {\r\n    descripition = descripition.substring(0, 200) + \"...\";\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className=\"featured\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`,\r\n      }}\r\n    >\r\n      <div className=\"featured--vertical\">\r\n        <div className=\"featured--horizontal\">\r\n          <div className=\"featured--name\">{item.original_name}</div>\r\n          <div className=\"featured--info\">\r\n            <div className=\"featured--points\">\r\n              {item.vote_average > 1 ? `${item.vote_average} pontos` : \"Sem avaliação\"}\r\n            </div>\r\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n            <div className=\"featured--seasons\">\r\n              {item.number_of_seasons} temporada\r\n              {item.number_of_seasons !== 1 ? \"s\" : \"\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"featured--description\">{descripition}</div>\r\n          <div className=\"featured--buttons\">\r\n            <a className=\"featured--watchbutton\" href={`/watch/${item.id}`}>► Assistir</a>\r\n            <a className=\"featured--listbutton\" href={`/list/add/${item.id}`}>+ Minha Lista</a>\r\n          </div>\r\n          <div className=\"featured--genres\">\r\n            <strong>Gêneros:</strong> {genres.join(', ')}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FeaturedMovie;\r\n","import React, { useState } from \"react\";\r\nimport \"./movieRow.css\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\n\r\nfunction MovieRow({ title, items }) {\r\n  const [scrollX, setScrollX] = useState(0);\r\n\r\n  const handleLeftArrow = () => {\r\n    let xLeft = scrollX + Math.round(window.innerWidth / 2);\r\n    if(xLeft > 0) {\r\n      xLeft = 0;\r\n    }\r\n    setScrollX(xLeft);\r\n  };\r\n\r\n  const handleRightArrow = () => {\r\n    let xRight = scrollX - Math.round(window.innerWidth / 2);\r\n    let listW = items.results.length * 200;\r\n    if((window.innerWidth - listW) > xRight) {\r\n      xRight = (window.innerWidth - listW) - 60;\r\n    }\r\n    setScrollX(xRight);\r\n  };\r\n\r\n  return (\r\n    <section className=\"movieRow\">\r\n      <h2 className=\"movieRow--title\">{title}</h2>\r\n\r\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n        <NavigateBeforeIcon style={{ fontSize: 50 }} />\r\n      </div>\r\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n        <NavigateNextIcon style={{ fontSize: 50 }} />\r\n      </div>\r\n\r\n      <div className=\"movieRow--listarea\">\r\n        <div\r\n          className=\"movieRow--list\"\r\n          style={{\r\n            marginLeft: scrollX,\r\n            width: items.results.length * 200\r\n          }}\r\n        >\r\n          {items.results.length > 0 &&\r\n            items.results.map((item, key) => (\r\n              <div key={key} className=\"movieRow--item\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n                  alt={item.original_title}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MovieRow;\r\n","import React from 'react';\r\nimport \"./footer.css\"\r\n\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer>\r\n            <p>Site feito para estudo, por Marlon Melchiades.</p>\r\n            <p>Desenvolvido com ReactJS e dados pegos da API do site Themoviedb.org</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Tmdb from \"./components/Request/Tmdb.js\";\nimport Header from \"./components/Header\";\nimport FeaturedMovie from \"./components/FeaturedMovie\";\nimport MovieRow from \"./components/MovieRow\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      let originals = list.filter((i) => i.slug === \"originals\");  \n      let ramdomChosen = Math.floor(\n        Math.random() * (originals[0].items.results.length - 1)\n      );\n      let chosen = originals[0].items.results[ramdomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, \"tv\");\n      setFeaturedData(chosenInfo);\n    };\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n    window.addEventListener(\"scroll\", scrollListener);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollListener);\n    };\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n      {featuredData && <FeaturedMovie item={featuredData} />}\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n      <Footer />\n\n      {movieList.length <= 0 && (\n        <div className=\"loading\">\n          <img\n            src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\"\n            alt=\"Gif de carregamento\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}